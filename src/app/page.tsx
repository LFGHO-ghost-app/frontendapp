/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/nWUIWyPhM93
 */
"use client";
import React, { use, useState } from "react";
import Link from "next/link";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import {
  DropdownMenuTrigger,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuItem,
  DropdownMenuContent,
  DropdownMenu,
} from "@/components/ui/dropdown-menu";
import {
  DialogTrigger,
  DialogTitle,
  DialogHeader,
  DialogFooter,
  DialogContent,
  Dialog,
} from "@/components/ui/dialog";
import { SelectItem, SelectContent, Select } from "@/components/ui/select";
import { Label } from "@/components/ui/label";
import { CardContent, Card } from "@/components/ui/Card";
import { HeightIcon } from "@radix-ui/react-icons";

const API_URL =
  "https://backendapi-production-6187.up.railway.app/api/v1/assets";
const products = [
  {
    title: "Aave T-Shirt",
    price: 4.0,
    image:
      "https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fassets.coingecko.com%2Frewards%2Fimages%2F50%2FArtboard_26_5x4.jpg%3F1607002109&f=1&nofb=1&ipt=614d86fee914aac59f4c65059ea69f98cf0a13685ae0fb30f29d83eaf778acbd&ipo=images",
  },
  {
    title: "Eco Bag",
    price: 1.00,
    image: "https://i.postimg.cc/V6bSWChz/acc-tb-001.png",
  },
  {
    title: "Passport",
    price: 1.00,
    image: "https://i.postimg.cc/Rh5Ws0rK/GHOPassport.jpg",
  },
  {
    title: "Hoddie",
    price: 1.00,
    image: "https://i.postimg.cc/XqfpT03h/Hoddie.png",
  },
  {
    title: "YOLO Hoddie",
    price: 1.00,
    image: "https://i.postimg.cc/P5rPFc73/Sweater-YOLO.png",
  },
  {
    title: "Hoddie Light",
    price: 1.00,
    image: "https://i.postimg.cc/L6Sqjh3M/unisex-swt-0009.png",
  },
];

export default function Home() {
  const [wallet, setWallet] = useState("");
  const [paymentConfirmation, setPaymentConfirmation] = useState("");
  const [isClaiming, setIsClaiming] = useState(false);
  const [claimSuccess, setClaimSuccess] = useState(false);
  const [transactionResponse, setTransactionResponse] = useState({})

  const handleClaimProduct = async (price: number) => {
    setIsClaiming(true);
    // Simulación de una solicitud de servidor
    console.log(claimSuccess)
    const transaction = await processPayment(price);
    console.log("transaction ", transaction);
    console.log("transaccion ", transaction.result);
    setTransactionResponse(transaction)
    setIsClaiming(false);
    setClaimSuccess(transaction.success);
    console.log(claimSuccess)
    // Restablecer los valores después de 5 segundos
  };
  const processPayment = async (price: number) => {
    const payload = {
      // Your payload data here
      address: "0xff52083745AEbD841De96336697CbA3334a3A7E9",
      amount: price,
      signature:
        "0xb4e0db4e4c5a99e6b1c9bd9d25ff26ce1df016a28428e3a0429b395f72cde1b97b83828f942f9519c9489412a2e8eb4b671d11af9dd520fb987590598b9747ce1c",
    };
    const data = await fetch(`${API_URL}/process-payment`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(payload),
    });
    const _data = await data.json();    
    return _data;
  };

  return (
    <>
      <div className="flex flex-col min-h-screen bg-gray-100 dark:bg-gray-900">
        <header className="flex h-14 items-center gap-4 border-b bg-white py-12 px-6 dark:bg-gray-800/40 w-full justify-between	">
          <Link className="flex items-center gap-2 font-semibold" href="#">
            <span className="">Aave Merch</span>
          </Link>

          <form className="w-2/3 md:w-1/4">
            <label className="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">
              Search
            </label>
            <div className="relative">
              <div className="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
                <svg
                  className="w-4 h-4 text-gray-500 dark:text-gray-400"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 20 20"
                >
                  <path
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"
                  />
                </svg>
              </div>
              <input
                type="search"
                id="default-search"
                className="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Search Mockups, Logos..."
                required
              />
              <button
                type="submit"
                className="text-white absolute end-2.5 bottom-2.5 bg-gray-900 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
              >
                Search
              </button>
            </div>
          </form>
          <div>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
              className="feather feather-shopping-cart"
            >
              <circle cx="9" cy="21" r="1"></circle>
              <circle cx="20" cy="21" r="1"></circle>
              <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
            </svg>
          </div>
        </header>

        <main className="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-16 p-4 md:p-6">
            {products.map((product, index) => (
              <Card
                key={index}
                product={product}
                handleClaimProduct={() => handleClaimProduct(product.price)}
              >
                <CardContent className="flex flex-col items-center gap-2 pt-8">
                  <div className="relative group overflow-hidden rounded-lg">
                    <img
                      alt=""
                      className="object-cover w-full h-60 rounded"
                      height={400}
                      src={product.image}
                      style={{
                        aspectRatio: "400/300",
                        objectFit: "cover",
                      }}
                      width={500}
                    />
                    <div className="bg-white p-4 dark:bg-gray-950">
                      <h2 className="font-semibold text-lg md:text-xl">
                        {product.title}
                      </h2>
                      <h4 className="text-gray-500 text-base md:text-lg">
                        {product.price}
                      </h4>
                    </div>
                  </div>
                  <Dialog>
                    <DialogTrigger asChild>
                      <Button>Buy Now</Button>
                    </DialogTrigger>
                    <DialogContent>
                      <DialogHeader>
                        <DialogTitle>
                          {!claimSuccess ? (
                            <>
                              <p>Wohoooo! It's almost yours!</p>
                            </>
                          ) : (
                            <>
                              <p>I'm yours</p>
                            </>
                          )}
                        </DialogTitle>
                      </DialogHeader>
                      {claimSuccess ? (
                        <div className="relative p-4 text-center bg-white rounded-lg sm:p-5">
                          <div className="w-12 h-12 rounded-full bg-green-100 dark:bg-green-900 p-2 flex items-center justify-center mx-auto mb-3.5">
                            <svg
                              aria-hidden="true"
                              className="w-8 h-8 text-green-500 dark:text-green-400"
                              fill="currentColor"
                              viewBox="0 0 20 20"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                fillRule="evenodd"
                                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                clipRule="evenodd"
                              ></path>
                            </svg>
                            <span className="sr-only">Success</span>
                          </div>
                          <p className="mb-4 text-lg font-semibold text-gray-900 dark:text-white">
                          Amazing! You got it                          </p>
                          <p>Remember to confirm your address to ship!</p>
                        </div>
                      ) : (
                        <div>
                          <form className="space-y-4">
                            <div className="space-y-2">
                              <Label htmlFor="wallet">Wallet Address</Label>
                              <Input
                                id="wallet"
                                value={wallet}
                                onChange={(e) => setWallet(e.target.value)}
                                placeholder="Enter your wallet address"
                              />
                            </div>
                            <div className="space-y-2">
                              <Label htmlFor="payment-confirmation">
                                Payment Confirmation
                              </Label>
                              <Input
                                id="payment-confirmation"
                                value={paymentConfirmation}
                                onChange={(e) =>
                                  setPaymentConfirmation(e.target.value)
                                }
                                placeholder="Enter payment confirmation details"
                              />
                            </div>
                          </form>
                        </div>
                      )}
                      <DialogFooter>
                        {!claimSuccess ? (
                          <>
                            <Button variant="outline">Cancel</Button>
                            <Button
                              onClick={() => handleClaimProduct(product.price)}
                              disabled={isClaiming}
                            >
                              {isClaiming ? "Claiming..." : "Claim Product"}
                            </Button>
                          </>
                        ) : (
                          <DialogFooter>
  <Button onClick={() => {
    if ('result' in transactionResponse && transactionResponse.result) {
      window.open(`https://sepolia.etherscan.io/tx/${transactionResponse.result}`, '_blank', 'noopener noreferrer');
    } else {
      // Manejar el caso en el que 'result' no existe en transactionResponse
      console.error("No se encuentra la propiedad 'result' en transactionResponse");
    }
  }}>
    View transaction
  </Button>

                            <Button variant="outline">Close</Button>
                          </DialogFooter>
                        )}
                      </DialogFooter>
                    </DialogContent>
                  </Dialog>
                </CardContent>
              </Card>
            ))}
          </div>
        </main>
      </div>
    </>
  );
}
